@import "../../style/mixins/index";

// mixins for grid system
// ------------------------
.make-row(@gutter: @grid-gutter-width) {
    position: relative;
    margin-left: (@gutter / -2);
    margin-right: (@gutter / -2);
    height: auto;
    .clearfix;
}

.make-grid-columns() {
    .col(@index) {
        @item: ~".@{fy-prefix}-col-@{index}, .@{fy-prefix}-col-xs-@{index}, .@{fy-prefix}-col-sm-@{index}, .@{fy-prefix}-col-md-@{index}, .@{fy-prefix}-col-lg-@{index}";
        .col((@index + 1), @item);
    }
    .col(@index, @list) when (@index =< @grid-columns) {
        @item: ~".@{fy-prefix}-col-@{index}, .@{fy-prefix}-col-xs-@{index}, .@{fy-prefix}-col-sm-@{index}, .@{fy-prefix}-col-md-@{index}, .@{fy-prefix}-col-lg-@{index}";
        .col((@index + 1), ~"@{list}, @{item}");
    }
    .col(@index, @list) when (@index > @grid-columns) {
        @{list} {
            position: relative;
            // Prevent columns from collapsing when empty
            min-height: 1px;
            padding-left: (@grid-gutter-width / 2);
            padding-right: (@grid-gutter-width / 2);
        }
    }
    .col(1);
}

.float-grid-columns(@class) {
    .col(@index) { // initial
        @item: ~".@{fy-prefix}-col@{class}-@{index}";
        .col((@index + 1), @item);
    }
    .col(@index, @list) when (@index =< @grid-columns) { // general
        @item: ~".@{fy-prefix}-col@{class}-@{index}";
        .col((@index + 1), ~"@{list}, @{item}");
    }
    .col(@index, @list) when (@index > @grid-columns) { // terminal
        @{list} {
            float: left;
            flex: 0 0 auto;
        }
    }
    .col(1); // kickstart it
}

// lesshint false
.loop-grid-columns(@index, @class) when (@index > 0) {
    .@{fy-prefix}-col@{class}-@{index} {
        display: block;
        width: percentage((@index / @grid-columns));
    }
    .@{fy-prefix}-col@{class}-push-@{index} {
        left: percentage((@index / @grid-columns));
    }
    .@{fy-prefix}-col@{class}-pull-@{index} {
        right: percentage((@index / @grid-columns));
    }
    .@{fy-prefix}-col@{class}-offset-@{index} {
        margin-left: percentage((@index / @grid-columns));
    }
    .@{fy-prefix}-col@{class}-order-@{index} {
        order: @index;
    }
    .loop-grid-columns((@index - 1), @class);
}

.loop-grid-columns(@index, @class) when (@index = 0) {
    .@{fy-prefix}-col@{class}-@{index} {
        display: none;
    }
    .@{fy-prefix}-col-push-@{index} {
        left: auto;
    }
    .@{fy-prefix}-col-pull-@{index} {
        right: auto;
    }
    .@{fy-prefix}-col@{class}-push-@{index} {
        left: auto;
    }
    .@{fy-prefix}-col@{class}-pull-@{index} {
        right: auto;
    }
    .@{fy-prefix}-col@{class}-offset-@{index} {
        margin-left: 0;
    }
    .@{fy-prefix}-col@{class}-order-@{index} {
        order: 0;
    }
}

.make-grid(@class: ~'') {
    .float-grid-columns(@class);
    .loop-grid-columns(@grid-columns, @class);
}
